const express = require('express');
const app = express();
//define a port on which it should listen too
const port = 3000;
// generated by ChatGPT
const tasks = [
    {
        id: 1,
        title: "Complete project",
        description: "Finish coding the project and submit it",
        assignedTo: "John",
        status: "In Progress"
    },
    {
        id: 2,
        title: "Review feedback",
        description: "Review and incorporate feedback from the team",
        assignedTo: "Emily",
        status: "Pending"
    },
    {
        id: 3,
        title: "Prepare presentation",
        description: "Create slides and rehearse the presentation",
        assignedTo: "Mike",
        status: "Not Started"
    }
];
app.use(express.json());
app.use(express.urlencoded({ extended: true }));
//----------------------------------------------//
app.get('/tasks', (request, response) => {
    response.setHeader('Content-Type', 'application/json');
    response.status(200).json(tasks);
});
app.post('/tasks', (request, response) => {
    const newTask = request.body;
    const id = request.body.id;
    tasks.push(newTask);
    response.setHeader('Content-Type', 'application/json');
    response.status(201).json({task: newTask, id: id});
});
app.get('/tasks/:id', (request, response) => {
    const id = request.params.id;
    const task = tasks.find((task) => task.id == id);
    if (!task){
        return response.status(404).json({ error: 'Task not found' });
    }
    response.setHeader('Content-Type', 'application/json');
    response.status(200).json(task);
});
app.put('/tasks/:id', (request, response) => {
    const editTask = request.body;
    const id = request.params.id;
    // Find the book with the matching ISBN
    const taskId = tasks.findIndex((task) => task.id == id);

    if (taskId == -1) {
        return response.status(404).json({ error: 'Task not found' });
    }
    tasks.splice(taskId, 1, editTask);
    response.setHeader('Content-Type', 'application/json');
    response.json(editTask);
});
app.delete('/tasks/:id', (request, response) => {
    //const editBook = request.body;
    const id = request.params.id;
    const taskId = tasks.findIndex((task) => task.id == id);
    tasks.splice(taskId, 1)
    response.send('deleted ' + id)
});

app.listen(port, () => {
    console.log('Listening on Port: ', port)
});